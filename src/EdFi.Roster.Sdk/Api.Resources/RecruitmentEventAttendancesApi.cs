/*
 * Ed-Fi Operational Data Store API
 *
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * The version of the OpenAPI document: 3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using EdFi.Roster.Sdk.Client;
using EdFi.Roster.Sdk.Models.Resources;

namespace EdFi.Roster.Sdk.Api.Resources
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IRecruitmentEventAttendancesApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Deletes an existing resource using the resource identifier.
        /// </summary>
        /// <remarks>
        /// The DELETE operation is used to delete an existing resource by identifier. If the resource doesn&#39;t exist, an error will result (the resource will not be found).
        /// </remarks>
        /// <exception cref="EdFi.Roster.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A resource identifier that uniquely identifies the resource.</param>
        /// <param name="ifMatch">The ETag header value used to prevent the DELETE from removing a resource modified by another consumer. (optional)</param>
        /// <returns></returns>
        void DeleteRecruitmentEventAttendanceById(string id, string ifMatch = default(string));

        /// <summary>
        /// Deletes an existing resource using the resource identifier.
        /// </summary>
        /// <remarks>
        /// The DELETE operation is used to delete an existing resource by identifier. If the resource doesn&#39;t exist, an error will result (the resource will not be found).
        /// </remarks>
        /// <exception cref="EdFi.Roster.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A resource identifier that uniquely identifies the resource.</param>
        /// <param name="ifMatch">The ETag header value used to prevent the DELETE from removing a resource modified by another consumer. (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> DeleteRecruitmentEventAttendanceByIdWithHttpInfo(string id, string ifMatch = default(string));
        /// <summary>
        /// Retrieves deleted resources based on change version.
        /// </summary>
        /// <remarks>
        /// The DELETES operation is used to retrieve deleted resources.
        /// </remarks>
        /// <exception cref="EdFi.Roster.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="offset">Indicates how many items should be skipped before returning results. (optional, default to 0)</param>
        /// <param name="limit">Indicates the maximum number of items that should be returned in the results. (optional, default to 25)</param>
        /// <param name="minChangeVersion">Used in synchronization to set sequence minimum ChangeVersion (optional)</param>
        /// <param name="maxChangeVersion">Used in synchronization to set sequence maximum ChangeVersion (optional)</param>
        /// <param name="snapshotIdentifier">Indicates the Snapshot-Identifier that should be used. (optional)</param>
        /// <returns>List&lt;DeletedResource&gt;</returns>
        List<DeletedResource> DeletesRecruitmentEventAttendances(int? offset = default(int?), int? limit = default(int?), int? minChangeVersion = default(int?), int? maxChangeVersion = default(int?), string snapshotIdentifier = default(string));

        /// <summary>
        /// Retrieves deleted resources based on change version.
        /// </summary>
        /// <remarks>
        /// The DELETES operation is used to retrieve deleted resources.
        /// </remarks>
        /// <exception cref="EdFi.Roster.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="offset">Indicates how many items should be skipped before returning results. (optional, default to 0)</param>
        /// <param name="limit">Indicates the maximum number of items that should be returned in the results. (optional, default to 25)</param>
        /// <param name="minChangeVersion">Used in synchronization to set sequence minimum ChangeVersion (optional)</param>
        /// <param name="maxChangeVersion">Used in synchronization to set sequence maximum ChangeVersion (optional)</param>
        /// <param name="snapshotIdentifier">Indicates the Snapshot-Identifier that should be used. (optional)</param>
        /// <returns>ApiResponse of List&lt;DeletedResource&gt;</returns>
        ApiResponse<List<DeletedResource>> DeletesRecruitmentEventAttendancesWithHttpInfo(int? offset = default(int?), int? limit = default(int?), int? minChangeVersion = default(int?), int? maxChangeVersion = default(int?), string snapshotIdentifier = default(string));
        /// <summary>
        /// Retrieves specific resources using the resource&#39;s property values (using the \&quot;Get\&quot; pattern).
        /// </summary>
        /// <remarks>
        /// This GET operation provides access to resources using the \&quot;Get\&quot; search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).
        /// </remarks>
        /// <exception cref="EdFi.Roster.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="offset">Indicates how many items should be skipped before returning results. (optional, default to 0)</param>
        /// <param name="limit">Indicates the maximum number of items that should be returned in the results. (optional, default to 25)</param>
        /// <param name="minChangeVersion">Used in synchronization to set sequence minimum ChangeVersion (optional)</param>
        /// <param name="maxChangeVersion">Used in synchronization to set sequence maximum ChangeVersion (optional)</param>
        /// <param name="totalCount">Indicates if the total number of items available should be returned in the &#39;Total-Count&#39; header of the response.  If set to false, &#39;Total-Count&#39; header will not be provided. (optional, default to false)</param>
        /// <param name="recruitmentEventAttendeeIdentifier">The identifier for the attendee to a recuitment event. (optional)</param>
        /// <param name="educationOrganizationId">The identifier assigned to an education organization. (optional)</param>
        /// <param name="eventDate">The date of the event. (optional)</param>
        /// <param name="eventTitle">The title of the event. (optional)</param>
        /// <param name="genderDescriptor">The gender with which a person associates. (optional)</param>
        /// <param name="recruitmentEventAttendeeTypeDescriptor">Reflects the type of prospect, such as EPP Applicant, Hire, or Mentor Teacher. (optional)</param>
        /// <param name="sexDescriptor">A person&#39;s gender. (optional)</param>
        /// <param name="applied">Indicator of whether the prospect applied for a position. (optional)</param>
        /// <param name="electronicMailAddress">The numbers, letters, and symbols used to identify an electronic mail (e-mail) user within the network to which the individual or organization belongs. (optional)</param>
        /// <param name="firstName">A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change. (optional)</param>
        /// <param name="generationCodeSuffix">An appendage, if any, used to denote an individual&#39;s generation in his family (e.g., Jr., Sr., III). (optional)</param>
        /// <param name="hispanicLatinoEthnicity">An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race. The term, \&quot;Spanish origin,\&quot; can be used in addition to \&quot;Hispanic or Latino\&quot;. (optional)</param>
        /// <param name="id"> (optional)</param>
        /// <param name="lastSurname">The name borne in common by members of a family. (optional)</param>
        /// <param name="maidenName">The person&#39;s maiden name. (optional)</param>
        /// <param name="met">Indicator whether the person was met by a representative of the education organization. (optional)</param>
        /// <param name="middleName">A secondary name given to an individual at birth, baptism, or during another naming ceremony. (optional)</param>
        /// <param name="notes">Additional notes about the prospect. (optional)</param>
        /// <param name="personalTitlePrefix">A prefix used to denote the title, degree, position, or seniority of the person. (optional)</param>
        /// <param name="preScreeningRating">The rating initially assigned to the prospect prior to an official screening. (optional)</param>
        /// <param name="referral">Indicator of whether the prospect was a referral. (optional)</param>
        /// <param name="referredBy">The person making the referral. (optional)</param>
        /// <param name="socialMediaNetworkName">The social media network name (e.g., LinkedIn, Twitter, etc.) associated with the SocialMediaUserName. (optional)</param>
        /// <param name="socialMediaUserName">The user name of the person on social media. (optional)</param>
        /// <param name="snapshotIdentifier">Indicates the Snapshot-Identifier that should be used. (optional)</param>
        /// <returns>List&lt;TpdmRecruitmentEventAttendance&gt;</returns>
        List<TpdmRecruitmentEventAttendance> GetRecruitmentEventAttendances(int? offset = default(int?), int? limit = default(int?), int? minChangeVersion = default(int?), int? maxChangeVersion = default(int?), bool? totalCount = default(bool?), string recruitmentEventAttendeeIdentifier = default(string), int? educationOrganizationId = default(int?), DateTime? eventDate = default(DateTime?), string eventTitle = default(string), string genderDescriptor = default(string), string recruitmentEventAttendeeTypeDescriptor = default(string), string sexDescriptor = default(string), bool? applied = default(bool?), string electronicMailAddress = default(string), string firstName = default(string), string generationCodeSuffix = default(string), bool? hispanicLatinoEthnicity = default(bool?), string id = default(string), string lastSurname = default(string), string maidenName = default(string), bool? met = default(bool?), string middleName = default(string), string notes = default(string), string personalTitlePrefix = default(string), int? preScreeningRating = default(int?), bool? referral = default(bool?), string referredBy = default(string), string socialMediaNetworkName = default(string), string socialMediaUserName = default(string), string snapshotIdentifier = default(string));

        /// <summary>
        /// Retrieves specific resources using the resource&#39;s property values (using the \&quot;Get\&quot; pattern).
        /// </summary>
        /// <remarks>
        /// This GET operation provides access to resources using the \&quot;Get\&quot; search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).
        /// </remarks>
        /// <exception cref="EdFi.Roster.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="offset">Indicates how many items should be skipped before returning results. (optional, default to 0)</param>
        /// <param name="limit">Indicates the maximum number of items that should be returned in the results. (optional, default to 25)</param>
        /// <param name="minChangeVersion">Used in synchronization to set sequence minimum ChangeVersion (optional)</param>
        /// <param name="maxChangeVersion">Used in synchronization to set sequence maximum ChangeVersion (optional)</param>
        /// <param name="totalCount">Indicates if the total number of items available should be returned in the &#39;Total-Count&#39; header of the response.  If set to false, &#39;Total-Count&#39; header will not be provided. (optional, default to false)</param>
        /// <param name="recruitmentEventAttendeeIdentifier">The identifier for the attendee to a recuitment event. (optional)</param>
        /// <param name="educationOrganizationId">The identifier assigned to an education organization. (optional)</param>
        /// <param name="eventDate">The date of the event. (optional)</param>
        /// <param name="eventTitle">The title of the event. (optional)</param>
        /// <param name="genderDescriptor">The gender with which a person associates. (optional)</param>
        /// <param name="recruitmentEventAttendeeTypeDescriptor">Reflects the type of prospect, such as EPP Applicant, Hire, or Mentor Teacher. (optional)</param>
        /// <param name="sexDescriptor">A person&#39;s gender. (optional)</param>
        /// <param name="applied">Indicator of whether the prospect applied for a position. (optional)</param>
        /// <param name="electronicMailAddress">The numbers, letters, and symbols used to identify an electronic mail (e-mail) user within the network to which the individual or organization belongs. (optional)</param>
        /// <param name="firstName">A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change. (optional)</param>
        /// <param name="generationCodeSuffix">An appendage, if any, used to denote an individual&#39;s generation in his family (e.g., Jr., Sr., III). (optional)</param>
        /// <param name="hispanicLatinoEthnicity">An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race. The term, \&quot;Spanish origin,\&quot; can be used in addition to \&quot;Hispanic or Latino\&quot;. (optional)</param>
        /// <param name="id"> (optional)</param>
        /// <param name="lastSurname">The name borne in common by members of a family. (optional)</param>
        /// <param name="maidenName">The person&#39;s maiden name. (optional)</param>
        /// <param name="met">Indicator whether the person was met by a representative of the education organization. (optional)</param>
        /// <param name="middleName">A secondary name given to an individual at birth, baptism, or during another naming ceremony. (optional)</param>
        /// <param name="notes">Additional notes about the prospect. (optional)</param>
        /// <param name="personalTitlePrefix">A prefix used to denote the title, degree, position, or seniority of the person. (optional)</param>
        /// <param name="preScreeningRating">The rating initially assigned to the prospect prior to an official screening. (optional)</param>
        /// <param name="referral">Indicator of whether the prospect was a referral. (optional)</param>
        /// <param name="referredBy">The person making the referral. (optional)</param>
        /// <param name="socialMediaNetworkName">The social media network name (e.g., LinkedIn, Twitter, etc.) associated with the SocialMediaUserName. (optional)</param>
        /// <param name="socialMediaUserName">The user name of the person on social media. (optional)</param>
        /// <param name="snapshotIdentifier">Indicates the Snapshot-Identifier that should be used. (optional)</param>
        /// <returns>ApiResponse of List&lt;TpdmRecruitmentEventAttendance&gt;</returns>
        ApiResponse<List<TpdmRecruitmentEventAttendance>> GetRecruitmentEventAttendancesWithHttpInfo(int? offset = default(int?), int? limit = default(int?), int? minChangeVersion = default(int?), int? maxChangeVersion = default(int?), bool? totalCount = default(bool?), string recruitmentEventAttendeeIdentifier = default(string), int? educationOrganizationId = default(int?), DateTime? eventDate = default(DateTime?), string eventTitle = default(string), string genderDescriptor = default(string), string recruitmentEventAttendeeTypeDescriptor = default(string), string sexDescriptor = default(string), bool? applied = default(bool?), string electronicMailAddress = default(string), string firstName = default(string), string generationCodeSuffix = default(string), bool? hispanicLatinoEthnicity = default(bool?), string id = default(string), string lastSurname = default(string), string maidenName = default(string), bool? met = default(bool?), string middleName = default(string), string notes = default(string), string personalTitlePrefix = default(string), int? preScreeningRating = default(int?), bool? referral = default(bool?), string referredBy = default(string), string socialMediaNetworkName = default(string), string socialMediaUserName = default(string), string snapshotIdentifier = default(string));
        /// <summary>
        /// Retrieves a specific resource using the resource&#39;s identifier (using the \&quot;Get By Id\&quot; pattern).
        /// </summary>
        /// <remarks>
        /// This GET operation retrieves a resource by the specified resource identifier.
        /// </remarks>
        /// <exception cref="EdFi.Roster.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A resource identifier that uniquely identifies the resource.</param>
        /// <param name="ifNoneMatch">The previously returned ETag header value, used here to prevent the unnecessary data transfer of an unchanged resource. (optional)</param>
        /// <param name="snapshotIdentifier">Indicates the Snapshot-Identifier that should be used. (optional)</param>
        /// <returns>TpdmRecruitmentEventAttendance</returns>
        TpdmRecruitmentEventAttendance GetRecruitmentEventAttendancesById(string id, string ifNoneMatch = default(string), string snapshotIdentifier = default(string));

        /// <summary>
        /// Retrieves a specific resource using the resource&#39;s identifier (using the \&quot;Get By Id\&quot; pattern).
        /// </summary>
        /// <remarks>
        /// This GET operation retrieves a resource by the specified resource identifier.
        /// </remarks>
        /// <exception cref="EdFi.Roster.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A resource identifier that uniquely identifies the resource.</param>
        /// <param name="ifNoneMatch">The previously returned ETag header value, used here to prevent the unnecessary data transfer of an unchanged resource. (optional)</param>
        /// <param name="snapshotIdentifier">Indicates the Snapshot-Identifier that should be used. (optional)</param>
        /// <returns>ApiResponse of TpdmRecruitmentEventAttendance</returns>
        ApiResponse<TpdmRecruitmentEventAttendance> GetRecruitmentEventAttendancesByIdWithHttpInfo(string id, string ifNoneMatch = default(string), string snapshotIdentifier = default(string));
        /// <summary>
        /// Creates or updates resources based on the natural key values of the supplied resource.
        /// </summary>
        /// <remarks>
        /// The POST operation can be used to create or update resources. In database terms, this is often referred to as an \&quot;upsert\&quot; operation (insert + update). Clients should NOT include the resource \&quot;id\&quot; in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.
        /// </remarks>
        /// <exception cref="EdFi.Roster.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="recruitmentEventAttendance">The JSON representation of the \&quot;recruitmentEventAttendance\&quot; resource to be created or updated.</param>
        /// <returns></returns>
        void PostRecruitmentEventAttendance(TpdmRecruitmentEventAttendance recruitmentEventAttendance);

        /// <summary>
        /// Creates or updates resources based on the natural key values of the supplied resource.
        /// </summary>
        /// <remarks>
        /// The POST operation can be used to create or update resources. In database terms, this is often referred to as an \&quot;upsert\&quot; operation (insert + update). Clients should NOT include the resource \&quot;id\&quot; in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.
        /// </remarks>
        /// <exception cref="EdFi.Roster.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="recruitmentEventAttendance">The JSON representation of the \&quot;recruitmentEventAttendance\&quot; resource to be created or updated.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> PostRecruitmentEventAttendanceWithHttpInfo(TpdmRecruitmentEventAttendance recruitmentEventAttendance);
        /// <summary>
        /// Updates a resource based on the resource identifier.
        /// </summary>
        /// <remarks>
        /// The PUT operation is used to update a resource by identifier. If the resource identifier (\&quot;id\&quot;) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation and will not be modified in the database, and so recommendation is to use POST as that supports upsert behavior.
        /// </remarks>
        /// <exception cref="EdFi.Roster.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A resource identifier that uniquely identifies the resource.</param>
        /// <param name="recruitmentEventAttendance">The JSON representation of the \&quot;recruitmentEventAttendance\&quot; resource to be created or updated.</param>
        /// <param name="ifMatch">The ETag header value used to prevent the PUT from updating a resource modified by another consumer. (optional)</param>
        /// <returns></returns>
        void PutRecruitmentEventAttendance(string id, TpdmRecruitmentEventAttendance recruitmentEventAttendance, string ifMatch = default(string));

        /// <summary>
        /// Updates a resource based on the resource identifier.
        /// </summary>
        /// <remarks>
        /// The PUT operation is used to update a resource by identifier. If the resource identifier (\&quot;id\&quot;) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation and will not be modified in the database, and so recommendation is to use POST as that supports upsert behavior.
        /// </remarks>
        /// <exception cref="EdFi.Roster.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A resource identifier that uniquely identifies the resource.</param>
        /// <param name="recruitmentEventAttendance">The JSON representation of the \&quot;recruitmentEventAttendance\&quot; resource to be created or updated.</param>
        /// <param name="ifMatch">The ETag header value used to prevent the PUT from updating a resource modified by another consumer. (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> PutRecruitmentEventAttendanceWithHttpInfo(string id, TpdmRecruitmentEventAttendance recruitmentEventAttendance, string ifMatch = default(string));
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IRecruitmentEventAttendancesApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// Deletes an existing resource using the resource identifier.
        /// </summary>
        /// <remarks>
        /// The DELETE operation is used to delete an existing resource by identifier. If the resource doesn&#39;t exist, an error will result (the resource will not be found).
        /// </remarks>
        /// <exception cref="EdFi.Roster.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A resource identifier that uniquely identifies the resource.</param>
        /// <param name="ifMatch">The ETag header value used to prevent the DELETE from removing a resource modified by another consumer. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task DeleteRecruitmentEventAttendanceByIdAsync(string id, string ifMatch = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Deletes an existing resource using the resource identifier.
        /// </summary>
        /// <remarks>
        /// The DELETE operation is used to delete an existing resource by identifier. If the resource doesn&#39;t exist, an error will result (the resource will not be found).
        /// </remarks>
        /// <exception cref="EdFi.Roster.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A resource identifier that uniquely identifies the resource.</param>
        /// <param name="ifMatch">The ETag header value used to prevent the DELETE from removing a resource modified by another consumer. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> DeleteRecruitmentEventAttendanceByIdWithHttpInfoAsync(string id, string ifMatch = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Retrieves deleted resources based on change version.
        /// </summary>
        /// <remarks>
        /// The DELETES operation is used to retrieve deleted resources.
        /// </remarks>
        /// <exception cref="EdFi.Roster.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="offset">Indicates how many items should be skipped before returning results. (optional, default to 0)</param>
        /// <param name="limit">Indicates the maximum number of items that should be returned in the results. (optional, default to 25)</param>
        /// <param name="minChangeVersion">Used in synchronization to set sequence minimum ChangeVersion (optional)</param>
        /// <param name="maxChangeVersion">Used in synchronization to set sequence maximum ChangeVersion (optional)</param>
        /// <param name="snapshotIdentifier">Indicates the Snapshot-Identifier that should be used. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;DeletedResource&gt;</returns>
        System.Threading.Tasks.Task<List<DeletedResource>> DeletesRecruitmentEventAttendancesAsync(int? offset = default(int?), int? limit = default(int?), int? minChangeVersion = default(int?), int? maxChangeVersion = default(int?), string snapshotIdentifier = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Retrieves deleted resources based on change version.
        /// </summary>
        /// <remarks>
        /// The DELETES operation is used to retrieve deleted resources.
        /// </remarks>
        /// <exception cref="EdFi.Roster.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="offset">Indicates how many items should be skipped before returning results. (optional, default to 0)</param>
        /// <param name="limit">Indicates the maximum number of items that should be returned in the results. (optional, default to 25)</param>
        /// <param name="minChangeVersion">Used in synchronization to set sequence minimum ChangeVersion (optional)</param>
        /// <param name="maxChangeVersion">Used in synchronization to set sequence maximum ChangeVersion (optional)</param>
        /// <param name="snapshotIdentifier">Indicates the Snapshot-Identifier that should be used. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;DeletedResource&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<DeletedResource>>> DeletesRecruitmentEventAttendancesWithHttpInfoAsync(int? offset = default(int?), int? limit = default(int?), int? minChangeVersion = default(int?), int? maxChangeVersion = default(int?), string snapshotIdentifier = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Retrieves specific resources using the resource&#39;s property values (using the \&quot;Get\&quot; pattern).
        /// </summary>
        /// <remarks>
        /// This GET operation provides access to resources using the \&quot;Get\&quot; search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).
        /// </remarks>
        /// <exception cref="EdFi.Roster.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="offset">Indicates how many items should be skipped before returning results. (optional, default to 0)</param>
        /// <param name="limit">Indicates the maximum number of items that should be returned in the results. (optional, default to 25)</param>
        /// <param name="minChangeVersion">Used in synchronization to set sequence minimum ChangeVersion (optional)</param>
        /// <param name="maxChangeVersion">Used in synchronization to set sequence maximum ChangeVersion (optional)</param>
        /// <param name="totalCount">Indicates if the total number of items available should be returned in the &#39;Total-Count&#39; header of the response.  If set to false, &#39;Total-Count&#39; header will not be provided. (optional, default to false)</param>
        /// <param name="recruitmentEventAttendeeIdentifier">The identifier for the attendee to a recuitment event. (optional)</param>
        /// <param name="educationOrganizationId">The identifier assigned to an education organization. (optional)</param>
        /// <param name="eventDate">The date of the event. (optional)</param>
        /// <param name="eventTitle">The title of the event. (optional)</param>
        /// <param name="genderDescriptor">The gender with which a person associates. (optional)</param>
        /// <param name="recruitmentEventAttendeeTypeDescriptor">Reflects the type of prospect, such as EPP Applicant, Hire, or Mentor Teacher. (optional)</param>
        /// <param name="sexDescriptor">A person&#39;s gender. (optional)</param>
        /// <param name="applied">Indicator of whether the prospect applied for a position. (optional)</param>
        /// <param name="electronicMailAddress">The numbers, letters, and symbols used to identify an electronic mail (e-mail) user within the network to which the individual or organization belongs. (optional)</param>
        /// <param name="firstName">A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change. (optional)</param>
        /// <param name="generationCodeSuffix">An appendage, if any, used to denote an individual&#39;s generation in his family (e.g., Jr., Sr., III). (optional)</param>
        /// <param name="hispanicLatinoEthnicity">An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race. The term, \&quot;Spanish origin,\&quot; can be used in addition to \&quot;Hispanic or Latino\&quot;. (optional)</param>
        /// <param name="id"> (optional)</param>
        /// <param name="lastSurname">The name borne in common by members of a family. (optional)</param>
        /// <param name="maidenName">The person&#39;s maiden name. (optional)</param>
        /// <param name="met">Indicator whether the person was met by a representative of the education organization. (optional)</param>
        /// <param name="middleName">A secondary name given to an individual at birth, baptism, or during another naming ceremony. (optional)</param>
        /// <param name="notes">Additional notes about the prospect. (optional)</param>
        /// <param name="personalTitlePrefix">A prefix used to denote the title, degree, position, or seniority of the person. (optional)</param>
        /// <param name="preScreeningRating">The rating initially assigned to the prospect prior to an official screening. (optional)</param>
        /// <param name="referral">Indicator of whether the prospect was a referral. (optional)</param>
        /// <param name="referredBy">The person making the referral. (optional)</param>
        /// <param name="socialMediaNetworkName">The social media network name (e.g., LinkedIn, Twitter, etc.) associated with the SocialMediaUserName. (optional)</param>
        /// <param name="socialMediaUserName">The user name of the person on social media. (optional)</param>
        /// <param name="snapshotIdentifier">Indicates the Snapshot-Identifier that should be used. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;TpdmRecruitmentEventAttendance&gt;</returns>
        System.Threading.Tasks.Task<List<TpdmRecruitmentEventAttendance>> GetRecruitmentEventAttendancesAsync(int? offset = default(int?), int? limit = default(int?), int? minChangeVersion = default(int?), int? maxChangeVersion = default(int?), bool? totalCount = default(bool?), string recruitmentEventAttendeeIdentifier = default(string), int? educationOrganizationId = default(int?), DateTime? eventDate = default(DateTime?), string eventTitle = default(string), string genderDescriptor = default(string), string recruitmentEventAttendeeTypeDescriptor = default(string), string sexDescriptor = default(string), bool? applied = default(bool?), string electronicMailAddress = default(string), string firstName = default(string), string generationCodeSuffix = default(string), bool? hispanicLatinoEthnicity = default(bool?), string id = default(string), string lastSurname = default(string), string maidenName = default(string), bool? met = default(bool?), string middleName = default(string), string notes = default(string), string personalTitlePrefix = default(string), int? preScreeningRating = default(int?), bool? referral = default(bool?), string referredBy = default(string), string socialMediaNetworkName = default(string), string socialMediaUserName = default(string), string snapshotIdentifier = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Retrieves specific resources using the resource&#39;s property values (using the \&quot;Get\&quot; pattern).
        /// </summary>
        /// <remarks>
        /// This GET operation provides access to resources using the \&quot;Get\&quot; search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).
        /// </remarks>
        /// <exception cref="EdFi.Roster.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="offset">Indicates how many items should be skipped before returning results. (optional, default to 0)</param>
        /// <param name="limit">Indicates the maximum number of items that should be returned in the results. (optional, default to 25)</param>
        /// <param name="minChangeVersion">Used in synchronization to set sequence minimum ChangeVersion (optional)</param>
        /// <param name="maxChangeVersion">Used in synchronization to set sequence maximum ChangeVersion (optional)</param>
        /// <param name="totalCount">Indicates if the total number of items available should be returned in the &#39;Total-Count&#39; header of the response.  If set to false, &#39;Total-Count&#39; header will not be provided. (optional, default to false)</param>
        /// <param name="recruitmentEventAttendeeIdentifier">The identifier for the attendee to a recuitment event. (optional)</param>
        /// <param name="educationOrganizationId">The identifier assigned to an education organization. (optional)</param>
        /// <param name="eventDate">The date of the event. (optional)</param>
        /// <param name="eventTitle">The title of the event. (optional)</param>
        /// <param name="genderDescriptor">The gender with which a person associates. (optional)</param>
        /// <param name="recruitmentEventAttendeeTypeDescriptor">Reflects the type of prospect, such as EPP Applicant, Hire, or Mentor Teacher. (optional)</param>
        /// <param name="sexDescriptor">A person&#39;s gender. (optional)</param>
        /// <param name="applied">Indicator of whether the prospect applied for a position. (optional)</param>
        /// <param name="electronicMailAddress">The numbers, letters, and symbols used to identify an electronic mail (e-mail) user within the network to which the individual or organization belongs. (optional)</param>
        /// <param name="firstName">A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change. (optional)</param>
        /// <param name="generationCodeSuffix">An appendage, if any, used to denote an individual&#39;s generation in his family (e.g., Jr., Sr., III). (optional)</param>
        /// <param name="hispanicLatinoEthnicity">An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race. The term, \&quot;Spanish origin,\&quot; can be used in addition to \&quot;Hispanic or Latino\&quot;. (optional)</param>
        /// <param name="id"> (optional)</param>
        /// <param name="lastSurname">The name borne in common by members of a family. (optional)</param>
        /// <param name="maidenName">The person&#39;s maiden name. (optional)</param>
        /// <param name="met">Indicator whether the person was met by a representative of the education organization. (optional)</param>
        /// <param name="middleName">A secondary name given to an individual at birth, baptism, or during another naming ceremony. (optional)</param>
        /// <param name="notes">Additional notes about the prospect. (optional)</param>
        /// <param name="personalTitlePrefix">A prefix used to denote the title, degree, position, or seniority of the person. (optional)</param>
        /// <param name="preScreeningRating">The rating initially assigned to the prospect prior to an official screening. (optional)</param>
        /// <param name="referral">Indicator of whether the prospect was a referral. (optional)</param>
        /// <param name="referredBy">The person making the referral. (optional)</param>
        /// <param name="socialMediaNetworkName">The social media network name (e.g., LinkedIn, Twitter, etc.) associated with the SocialMediaUserName. (optional)</param>
        /// <param name="socialMediaUserName">The user name of the person on social media. (optional)</param>
        /// <param name="snapshotIdentifier">Indicates the Snapshot-Identifier that should be used. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;TpdmRecruitmentEventAttendance&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<TpdmRecruitmentEventAttendance>>> GetRecruitmentEventAttendancesWithHttpInfoAsync(int? offset = default(int?), int? limit = default(int?), int? minChangeVersion = default(int?), int? maxChangeVersion = default(int?), bool? totalCount = default(bool?), string recruitmentEventAttendeeIdentifier = default(string), int? educationOrganizationId = default(int?), DateTime? eventDate = default(DateTime?), string eventTitle = default(string), string genderDescriptor = default(string), string recruitmentEventAttendeeTypeDescriptor = default(string), string sexDescriptor = default(string), bool? applied = default(bool?), string electronicMailAddress = default(string), string firstName = default(string), string generationCodeSuffix = default(string), bool? hispanicLatinoEthnicity = default(bool?), string id = default(string), string lastSurname = default(string), string maidenName = default(string), bool? met = default(bool?), string middleName = default(string), string notes = default(string), string personalTitlePrefix = default(string), int? preScreeningRating = default(int?), bool? referral = default(bool?), string referredBy = default(string), string socialMediaNetworkName = default(string), string socialMediaUserName = default(string), string snapshotIdentifier = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Retrieves a specific resource using the resource&#39;s identifier (using the \&quot;Get By Id\&quot; pattern).
        /// </summary>
        /// <remarks>
        /// This GET operation retrieves a resource by the specified resource identifier.
        /// </remarks>
        /// <exception cref="EdFi.Roster.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A resource identifier that uniquely identifies the resource.</param>
        /// <param name="ifNoneMatch">The previously returned ETag header value, used here to prevent the unnecessary data transfer of an unchanged resource. (optional)</param>
        /// <param name="snapshotIdentifier">Indicates the Snapshot-Identifier that should be used. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of TpdmRecruitmentEventAttendance</returns>
        System.Threading.Tasks.Task<TpdmRecruitmentEventAttendance> GetRecruitmentEventAttendancesByIdAsync(string id, string ifNoneMatch = default(string), string snapshotIdentifier = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Retrieves a specific resource using the resource&#39;s identifier (using the \&quot;Get By Id\&quot; pattern).
        /// </summary>
        /// <remarks>
        /// This GET operation retrieves a resource by the specified resource identifier.
        /// </remarks>
        /// <exception cref="EdFi.Roster.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A resource identifier that uniquely identifies the resource.</param>
        /// <param name="ifNoneMatch">The previously returned ETag header value, used here to prevent the unnecessary data transfer of an unchanged resource. (optional)</param>
        /// <param name="snapshotIdentifier">Indicates the Snapshot-Identifier that should be used. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (TpdmRecruitmentEventAttendance)</returns>
        System.Threading.Tasks.Task<ApiResponse<TpdmRecruitmentEventAttendance>> GetRecruitmentEventAttendancesByIdWithHttpInfoAsync(string id, string ifNoneMatch = default(string), string snapshotIdentifier = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Creates or updates resources based on the natural key values of the supplied resource.
        /// </summary>
        /// <remarks>
        /// The POST operation can be used to create or update resources. In database terms, this is often referred to as an \&quot;upsert\&quot; operation (insert + update). Clients should NOT include the resource \&quot;id\&quot; in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.
        /// </remarks>
        /// <exception cref="EdFi.Roster.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="recruitmentEventAttendance">The JSON representation of the \&quot;recruitmentEventAttendance\&quot; resource to be created or updated.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task PostRecruitmentEventAttendanceAsync(TpdmRecruitmentEventAttendance recruitmentEventAttendance, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Creates or updates resources based on the natural key values of the supplied resource.
        /// </summary>
        /// <remarks>
        /// The POST operation can be used to create or update resources. In database terms, this is often referred to as an \&quot;upsert\&quot; operation (insert + update). Clients should NOT include the resource \&quot;id\&quot; in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.
        /// </remarks>
        /// <exception cref="EdFi.Roster.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="recruitmentEventAttendance">The JSON representation of the \&quot;recruitmentEventAttendance\&quot; resource to be created or updated.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> PostRecruitmentEventAttendanceWithHttpInfoAsync(TpdmRecruitmentEventAttendance recruitmentEventAttendance, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Updates a resource based on the resource identifier.
        /// </summary>
        /// <remarks>
        /// The PUT operation is used to update a resource by identifier. If the resource identifier (\&quot;id\&quot;) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation and will not be modified in the database, and so recommendation is to use POST as that supports upsert behavior.
        /// </remarks>
        /// <exception cref="EdFi.Roster.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A resource identifier that uniquely identifies the resource.</param>
        /// <param name="recruitmentEventAttendance">The JSON representation of the \&quot;recruitmentEventAttendance\&quot; resource to be created or updated.</param>
        /// <param name="ifMatch">The ETag header value used to prevent the PUT from updating a resource modified by another consumer. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task PutRecruitmentEventAttendanceAsync(string id, TpdmRecruitmentEventAttendance recruitmentEventAttendance, string ifMatch = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Updates a resource based on the resource identifier.
        /// </summary>
        /// <remarks>
        /// The PUT operation is used to update a resource by identifier. If the resource identifier (\&quot;id\&quot;) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation and will not be modified in the database, and so recommendation is to use POST as that supports upsert behavior.
        /// </remarks>
        /// <exception cref="EdFi.Roster.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A resource identifier that uniquely identifies the resource.</param>
        /// <param name="recruitmentEventAttendance">The JSON representation of the \&quot;recruitmentEventAttendance\&quot; resource to be created or updated.</param>
        /// <param name="ifMatch">The ETag header value used to prevent the PUT from updating a resource modified by another consumer. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> PutRecruitmentEventAttendanceWithHttpInfoAsync(string id, TpdmRecruitmentEventAttendance recruitmentEventAttendance, string ifMatch = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IRecruitmentEventAttendancesApi : IRecruitmentEventAttendancesApiSync, IRecruitmentEventAttendancesApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class RecruitmentEventAttendancesApi : IRecruitmentEventAttendancesApi
    {
        private EdFi.Roster.Sdk.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="RecruitmentEventAttendancesApi"/> class.
        /// </summary>
        /// <returns></returns>
        public RecruitmentEventAttendancesApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="RecruitmentEventAttendancesApi"/> class.
        /// </summary>
        /// <returns></returns>
        public RecruitmentEventAttendancesApi(String basePath)
        {
            this.Configuration = EdFi.Roster.Sdk.Client.Configuration.MergeConfigurations(
                EdFi.Roster.Sdk.Client.GlobalConfiguration.Instance,
                new EdFi.Roster.Sdk.Client.Configuration { BasePath = basePath }
            );
            this.Client = new EdFi.Roster.Sdk.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new EdFi.Roster.Sdk.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = EdFi.Roster.Sdk.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="RecruitmentEventAttendancesApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public RecruitmentEventAttendancesApi(EdFi.Roster.Sdk.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = EdFi.Roster.Sdk.Client.Configuration.MergeConfigurations(
                EdFi.Roster.Sdk.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new EdFi.Roster.Sdk.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new EdFi.Roster.Sdk.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = EdFi.Roster.Sdk.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="RecruitmentEventAttendancesApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public RecruitmentEventAttendancesApi(EdFi.Roster.Sdk.Client.ISynchronousClient client, EdFi.Roster.Sdk.Client.IAsynchronousClient asyncClient, EdFi.Roster.Sdk.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = EdFi.Roster.Sdk.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public EdFi.Roster.Sdk.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public EdFi.Roster.Sdk.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public EdFi.Roster.Sdk.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public EdFi.Roster.Sdk.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Deletes an existing resource using the resource identifier. The DELETE operation is used to delete an existing resource by identifier. If the resource doesn&#39;t exist, an error will result (the resource will not be found).
        /// </summary>
        /// <exception cref="EdFi.Roster.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A resource identifier that uniquely identifies the resource.</param>
        /// <param name="ifMatch">The ETag header value used to prevent the DELETE from removing a resource modified by another consumer. (optional)</param>
        /// <returns></returns>
        public void DeleteRecruitmentEventAttendanceById(string id, string ifMatch = default(string))
        {
            DeleteRecruitmentEventAttendanceByIdWithHttpInfo(id, ifMatch);
        }

        /// <summary>
        /// Deletes an existing resource using the resource identifier. The DELETE operation is used to delete an existing resource by identifier. If the resource doesn&#39;t exist, an error will result (the resource will not be found).
        /// </summary>
        /// <exception cref="EdFi.Roster.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A resource identifier that uniquely identifies the resource.</param>
        /// <param name="ifMatch">The ETag header value used to prevent the DELETE from removing a resource modified by another consumer. (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public EdFi.Roster.Sdk.Client.ApiResponse<Object> DeleteRecruitmentEventAttendanceByIdWithHttpInfo(string id, string ifMatch = default(string))
        {
            // verify the required parameter 'id' is set
            if (id == null)
                throw new EdFi.Roster.Sdk.Client.ApiException(400, "Missing required parameter 'id' when calling RecruitmentEventAttendancesApi->DeleteRecruitmentEventAttendanceById");

            EdFi.Roster.Sdk.Client.RequestOptions localVarRequestOptions = new EdFi.Roster.Sdk.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
            };

            var localVarContentType = EdFi.Roster.Sdk.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = EdFi.Roster.Sdk.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("id", EdFi.Roster.Sdk.Client.ClientUtils.ParameterToString(id)); // path parameter
            if (ifMatch != null)
            {
                localVarRequestOptions.HeaderParameters.Add("If-Match", EdFi.Roster.Sdk.Client.ClientUtils.ParameterToString(ifMatch)); // header parameter
            }

            // authentication (oauth2_client_credentials) required
            // oauth required
            if (!String.IsNullOrEmpty(this.Configuration.AccessToken))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = this.Client.Delete<Object>("/tpdm/recruitmentEventAttendances/{id}", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DeleteRecruitmentEventAttendanceById", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// Deletes an existing resource using the resource identifier. The DELETE operation is used to delete an existing resource by identifier. If the resource doesn&#39;t exist, an error will result (the resource will not be found).
        /// </summary>
        /// <exception cref="EdFi.Roster.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A resource identifier that uniquely identifies the resource.</param>
        /// <param name="ifMatch">The ETag header value used to prevent the DELETE from removing a resource modified by another consumer. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task DeleteRecruitmentEventAttendanceByIdAsync(string id, string ifMatch = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            await DeleteRecruitmentEventAttendanceByIdWithHttpInfoAsync(id, ifMatch, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Deletes an existing resource using the resource identifier. The DELETE operation is used to delete an existing resource by identifier. If the resource doesn&#39;t exist, an error will result (the resource will not be found).
        /// </summary>
        /// <exception cref="EdFi.Roster.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A resource identifier that uniquely identifies the resource.</param>
        /// <param name="ifMatch">The ETag header value used to prevent the DELETE from removing a resource modified by another consumer. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<EdFi.Roster.Sdk.Client.ApiResponse<Object>> DeleteRecruitmentEventAttendanceByIdWithHttpInfoAsync(string id, string ifMatch = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'id' is set
            if (id == null)
                throw new EdFi.Roster.Sdk.Client.ApiException(400, "Missing required parameter 'id' when calling RecruitmentEventAttendancesApi->DeleteRecruitmentEventAttendanceById");


            EdFi.Roster.Sdk.Client.RequestOptions localVarRequestOptions = new EdFi.Roster.Sdk.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
            };


            var localVarContentType = EdFi.Roster.Sdk.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = EdFi.Roster.Sdk.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("id", EdFi.Roster.Sdk.Client.ClientUtils.ParameterToString(id)); // path parameter
            if (ifMatch != null)
            {
                localVarRequestOptions.HeaderParameters.Add("If-Match", EdFi.Roster.Sdk.Client.ClientUtils.ParameterToString(ifMatch)); // header parameter
            }

            // authentication (oauth2_client_credentials) required
            // oauth required
            if (!String.IsNullOrEmpty(this.Configuration.AccessToken))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.DeleteAsync<Object>("/tpdm/recruitmentEventAttendances/{id}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DeleteRecruitmentEventAttendanceById", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// Retrieves deleted resources based on change version. The DELETES operation is used to retrieve deleted resources.
        /// </summary>
        /// <exception cref="EdFi.Roster.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="offset">Indicates how many items should be skipped before returning results. (optional, default to 0)</param>
        /// <param name="limit">Indicates the maximum number of items that should be returned in the results. (optional, default to 25)</param>
        /// <param name="minChangeVersion">Used in synchronization to set sequence minimum ChangeVersion (optional)</param>
        /// <param name="maxChangeVersion">Used in synchronization to set sequence maximum ChangeVersion (optional)</param>
        /// <param name="snapshotIdentifier">Indicates the Snapshot-Identifier that should be used. (optional)</param>
        /// <returns>List&lt;DeletedResource&gt;</returns>
        public List<DeletedResource> DeletesRecruitmentEventAttendances(int? offset = default(int?), int? limit = default(int?), int? minChangeVersion = default(int?), int? maxChangeVersion = default(int?), string snapshotIdentifier = default(string))
        {
            EdFi.Roster.Sdk.Client.ApiResponse<List<DeletedResource>> localVarResponse = DeletesRecruitmentEventAttendancesWithHttpInfo(offset, limit, minChangeVersion, maxChangeVersion, snapshotIdentifier);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Retrieves deleted resources based on change version. The DELETES operation is used to retrieve deleted resources.
        /// </summary>
        /// <exception cref="EdFi.Roster.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="offset">Indicates how many items should be skipped before returning results. (optional, default to 0)</param>
        /// <param name="limit">Indicates the maximum number of items that should be returned in the results. (optional, default to 25)</param>
        /// <param name="minChangeVersion">Used in synchronization to set sequence minimum ChangeVersion (optional)</param>
        /// <param name="maxChangeVersion">Used in synchronization to set sequence maximum ChangeVersion (optional)</param>
        /// <param name="snapshotIdentifier">Indicates the Snapshot-Identifier that should be used. (optional)</param>
        /// <returns>ApiResponse of List&lt;DeletedResource&gt;</returns>
        public EdFi.Roster.Sdk.Client.ApiResponse<List<DeletedResource>> DeletesRecruitmentEventAttendancesWithHttpInfo(int? offset = default(int?), int? limit = default(int?), int? minChangeVersion = default(int?), int? maxChangeVersion = default(int?), string snapshotIdentifier = default(string))
        {
            EdFi.Roster.Sdk.Client.RequestOptions localVarRequestOptions = new EdFi.Roster.Sdk.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = EdFi.Roster.Sdk.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = EdFi.Roster.Sdk.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (offset != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "offset", offset));
            }
            if (limit != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "limit", limit));
            }
            if (minChangeVersion != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "minChangeVersion", minChangeVersion));
            }
            if (maxChangeVersion != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "maxChangeVersion", maxChangeVersion));
            }
            if (snapshotIdentifier != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Snapshot-Identifier", EdFi.Roster.Sdk.Client.ClientUtils.ParameterToString(snapshotIdentifier)); // header parameter
            }

            // authentication (oauth2_client_credentials) required
            // oauth required
            if (!String.IsNullOrEmpty(this.Configuration.AccessToken))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<List<DeletedResource>>("/tpdm/recruitmentEventAttendances/deletes", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DeletesRecruitmentEventAttendances", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// Retrieves deleted resources based on change version. The DELETES operation is used to retrieve deleted resources.
        /// </summary>
        /// <exception cref="EdFi.Roster.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="offset">Indicates how many items should be skipped before returning results. (optional, default to 0)</param>
        /// <param name="limit">Indicates the maximum number of items that should be returned in the results. (optional, default to 25)</param>
        /// <param name="minChangeVersion">Used in synchronization to set sequence minimum ChangeVersion (optional)</param>
        /// <param name="maxChangeVersion">Used in synchronization to set sequence maximum ChangeVersion (optional)</param>
        /// <param name="snapshotIdentifier">Indicates the Snapshot-Identifier that should be used. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;DeletedResource&gt;</returns>
        public async System.Threading.Tasks.Task<List<DeletedResource>> DeletesRecruitmentEventAttendancesAsync(int? offset = default(int?), int? limit = default(int?), int? minChangeVersion = default(int?), int? maxChangeVersion = default(int?), string snapshotIdentifier = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            EdFi.Roster.Sdk.Client.ApiResponse<List<DeletedResource>> localVarResponse = await DeletesRecruitmentEventAttendancesWithHttpInfoAsync(offset, limit, minChangeVersion, maxChangeVersion, snapshotIdentifier, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Retrieves deleted resources based on change version. The DELETES operation is used to retrieve deleted resources.
        /// </summary>
        /// <exception cref="EdFi.Roster.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="offset">Indicates how many items should be skipped before returning results. (optional, default to 0)</param>
        /// <param name="limit">Indicates the maximum number of items that should be returned in the results. (optional, default to 25)</param>
        /// <param name="minChangeVersion">Used in synchronization to set sequence minimum ChangeVersion (optional)</param>
        /// <param name="maxChangeVersion">Used in synchronization to set sequence maximum ChangeVersion (optional)</param>
        /// <param name="snapshotIdentifier">Indicates the Snapshot-Identifier that should be used. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;DeletedResource&gt;)</returns>
        public async System.Threading.Tasks.Task<EdFi.Roster.Sdk.Client.ApiResponse<List<DeletedResource>>> DeletesRecruitmentEventAttendancesWithHttpInfoAsync(int? offset = default(int?), int? limit = default(int?), int? minChangeVersion = default(int?), int? maxChangeVersion = default(int?), string snapshotIdentifier = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            EdFi.Roster.Sdk.Client.RequestOptions localVarRequestOptions = new EdFi.Roster.Sdk.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };


            var localVarContentType = EdFi.Roster.Sdk.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = EdFi.Roster.Sdk.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (offset != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "offset", offset));
            }
            if (limit != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "limit", limit));
            }
            if (minChangeVersion != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "minChangeVersion", minChangeVersion));
            }
            if (maxChangeVersion != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "maxChangeVersion", maxChangeVersion));
            }
            if (snapshotIdentifier != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Snapshot-Identifier", EdFi.Roster.Sdk.Client.ClientUtils.ParameterToString(snapshotIdentifier)); // header parameter
            }

            // authentication (oauth2_client_credentials) required
            // oauth required
            if (!String.IsNullOrEmpty(this.Configuration.AccessToken))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<List<DeletedResource>>("/tpdm/recruitmentEventAttendances/deletes", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DeletesRecruitmentEventAttendances", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// Retrieves specific resources using the resource&#39;s property values (using the \&quot;Get\&quot; pattern). This GET operation provides access to resources using the \&quot;Get\&quot; search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).
        /// </summary>
        /// <exception cref="EdFi.Roster.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="offset">Indicates how many items should be skipped before returning results. (optional, default to 0)</param>
        /// <param name="limit">Indicates the maximum number of items that should be returned in the results. (optional, default to 25)</param>
        /// <param name="minChangeVersion">Used in synchronization to set sequence minimum ChangeVersion (optional)</param>
        /// <param name="maxChangeVersion">Used in synchronization to set sequence maximum ChangeVersion (optional)</param>
        /// <param name="totalCount">Indicates if the total number of items available should be returned in the &#39;Total-Count&#39; header of the response.  If set to false, &#39;Total-Count&#39; header will not be provided. (optional, default to false)</param>
        /// <param name="recruitmentEventAttendeeIdentifier">The identifier for the attendee to a recuitment event. (optional)</param>
        /// <param name="educationOrganizationId">The identifier assigned to an education organization. (optional)</param>
        /// <param name="eventDate">The date of the event. (optional)</param>
        /// <param name="eventTitle">The title of the event. (optional)</param>
        /// <param name="genderDescriptor">The gender with which a person associates. (optional)</param>
        /// <param name="recruitmentEventAttendeeTypeDescriptor">Reflects the type of prospect, such as EPP Applicant, Hire, or Mentor Teacher. (optional)</param>
        /// <param name="sexDescriptor">A person&#39;s gender. (optional)</param>
        /// <param name="applied">Indicator of whether the prospect applied for a position. (optional)</param>
        /// <param name="electronicMailAddress">The numbers, letters, and symbols used to identify an electronic mail (e-mail) user within the network to which the individual or organization belongs. (optional)</param>
        /// <param name="firstName">A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change. (optional)</param>
        /// <param name="generationCodeSuffix">An appendage, if any, used to denote an individual&#39;s generation in his family (e.g., Jr., Sr., III). (optional)</param>
        /// <param name="hispanicLatinoEthnicity">An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race. The term, \&quot;Spanish origin,\&quot; can be used in addition to \&quot;Hispanic or Latino\&quot;. (optional)</param>
        /// <param name="id"> (optional)</param>
        /// <param name="lastSurname">The name borne in common by members of a family. (optional)</param>
        /// <param name="maidenName">The person&#39;s maiden name. (optional)</param>
        /// <param name="met">Indicator whether the person was met by a representative of the education organization. (optional)</param>
        /// <param name="middleName">A secondary name given to an individual at birth, baptism, or during another naming ceremony. (optional)</param>
        /// <param name="notes">Additional notes about the prospect. (optional)</param>
        /// <param name="personalTitlePrefix">A prefix used to denote the title, degree, position, or seniority of the person. (optional)</param>
        /// <param name="preScreeningRating">The rating initially assigned to the prospect prior to an official screening. (optional)</param>
        /// <param name="referral">Indicator of whether the prospect was a referral. (optional)</param>
        /// <param name="referredBy">The person making the referral. (optional)</param>
        /// <param name="socialMediaNetworkName">The social media network name (e.g., LinkedIn, Twitter, etc.) associated with the SocialMediaUserName. (optional)</param>
        /// <param name="socialMediaUserName">The user name of the person on social media. (optional)</param>
        /// <param name="snapshotIdentifier">Indicates the Snapshot-Identifier that should be used. (optional)</param>
        /// <returns>List&lt;TpdmRecruitmentEventAttendance&gt;</returns>
        public List<TpdmRecruitmentEventAttendance> GetRecruitmentEventAttendances(int? offset = default(int?), int? limit = default(int?), int? minChangeVersion = default(int?), int? maxChangeVersion = default(int?), bool? totalCount = default(bool?), string recruitmentEventAttendeeIdentifier = default(string), int? educationOrganizationId = default(int?), DateTime? eventDate = default(DateTime?), string eventTitle = default(string), string genderDescriptor = default(string), string recruitmentEventAttendeeTypeDescriptor = default(string), string sexDescriptor = default(string), bool? applied = default(bool?), string electronicMailAddress = default(string), string firstName = default(string), string generationCodeSuffix = default(string), bool? hispanicLatinoEthnicity = default(bool?), string id = default(string), string lastSurname = default(string), string maidenName = default(string), bool? met = default(bool?), string middleName = default(string), string notes = default(string), string personalTitlePrefix = default(string), int? preScreeningRating = default(int?), bool? referral = default(bool?), string referredBy = default(string), string socialMediaNetworkName = default(string), string socialMediaUserName = default(string), string snapshotIdentifier = default(string))
        {
            EdFi.Roster.Sdk.Client.ApiResponse<List<TpdmRecruitmentEventAttendance>> localVarResponse = GetRecruitmentEventAttendancesWithHttpInfo(offset, limit, minChangeVersion, maxChangeVersion, totalCount, recruitmentEventAttendeeIdentifier, educationOrganizationId, eventDate, eventTitle, genderDescriptor, recruitmentEventAttendeeTypeDescriptor, sexDescriptor, applied, electronicMailAddress, firstName, generationCodeSuffix, hispanicLatinoEthnicity, id, lastSurname, maidenName, met, middleName, notes, personalTitlePrefix, preScreeningRating, referral, referredBy, socialMediaNetworkName, socialMediaUserName, snapshotIdentifier);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Retrieves specific resources using the resource&#39;s property values (using the \&quot;Get\&quot; pattern). This GET operation provides access to resources using the \&quot;Get\&quot; search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).
        /// </summary>
        /// <exception cref="EdFi.Roster.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="offset">Indicates how many items should be skipped before returning results. (optional, default to 0)</param>
        /// <param name="limit">Indicates the maximum number of items that should be returned in the results. (optional, default to 25)</param>
        /// <param name="minChangeVersion">Used in synchronization to set sequence minimum ChangeVersion (optional)</param>
        /// <param name="maxChangeVersion">Used in synchronization to set sequence maximum ChangeVersion (optional)</param>
        /// <param name="totalCount">Indicates if the total number of items available should be returned in the &#39;Total-Count&#39; header of the response.  If set to false, &#39;Total-Count&#39; header will not be provided. (optional, default to false)</param>
        /// <param name="recruitmentEventAttendeeIdentifier">The identifier for the attendee to a recuitment event. (optional)</param>
        /// <param name="educationOrganizationId">The identifier assigned to an education organization. (optional)</param>
        /// <param name="eventDate">The date of the event. (optional)</param>
        /// <param name="eventTitle">The title of the event. (optional)</param>
        /// <param name="genderDescriptor">The gender with which a person associates. (optional)</param>
        /// <param name="recruitmentEventAttendeeTypeDescriptor">Reflects the type of prospect, such as EPP Applicant, Hire, or Mentor Teacher. (optional)</param>
        /// <param name="sexDescriptor">A person&#39;s gender. (optional)</param>
        /// <param name="applied">Indicator of whether the prospect applied for a position. (optional)</param>
        /// <param name="electronicMailAddress">The numbers, letters, and symbols used to identify an electronic mail (e-mail) user within the network to which the individual or organization belongs. (optional)</param>
        /// <param name="firstName">A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change. (optional)</param>
        /// <param name="generationCodeSuffix">An appendage, if any, used to denote an individual&#39;s generation in his family (e.g., Jr., Sr., III). (optional)</param>
        /// <param name="hispanicLatinoEthnicity">An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race. The term, \&quot;Spanish origin,\&quot; can be used in addition to \&quot;Hispanic or Latino\&quot;. (optional)</param>
        /// <param name="id"> (optional)</param>
        /// <param name="lastSurname">The name borne in common by members of a family. (optional)</param>
        /// <param name="maidenName">The person&#39;s maiden name. (optional)</param>
        /// <param name="met">Indicator whether the person was met by a representative of the education organization. (optional)</param>
        /// <param name="middleName">A secondary name given to an individual at birth, baptism, or during another naming ceremony. (optional)</param>
        /// <param name="notes">Additional notes about the prospect. (optional)</param>
        /// <param name="personalTitlePrefix">A prefix used to denote the title, degree, position, or seniority of the person. (optional)</param>
        /// <param name="preScreeningRating">The rating initially assigned to the prospect prior to an official screening. (optional)</param>
        /// <param name="referral">Indicator of whether the prospect was a referral. (optional)</param>
        /// <param name="referredBy">The person making the referral. (optional)</param>
        /// <param name="socialMediaNetworkName">The social media network name (e.g., LinkedIn, Twitter, etc.) associated with the SocialMediaUserName. (optional)</param>
        /// <param name="socialMediaUserName">The user name of the person on social media. (optional)</param>
        /// <param name="snapshotIdentifier">Indicates the Snapshot-Identifier that should be used. (optional)</param>
        /// <returns>ApiResponse of List&lt;TpdmRecruitmentEventAttendance&gt;</returns>
        public EdFi.Roster.Sdk.Client.ApiResponse<List<TpdmRecruitmentEventAttendance>> GetRecruitmentEventAttendancesWithHttpInfo(int? offset = default(int?), int? limit = default(int?), int? minChangeVersion = default(int?), int? maxChangeVersion = default(int?), bool? totalCount = default(bool?), string recruitmentEventAttendeeIdentifier = default(string), int? educationOrganizationId = default(int?), DateTime? eventDate = default(DateTime?), string eventTitle = default(string), string genderDescriptor = default(string), string recruitmentEventAttendeeTypeDescriptor = default(string), string sexDescriptor = default(string), bool? applied = default(bool?), string electronicMailAddress = default(string), string firstName = default(string), string generationCodeSuffix = default(string), bool? hispanicLatinoEthnicity = default(bool?), string id = default(string), string lastSurname = default(string), string maidenName = default(string), bool? met = default(bool?), string middleName = default(string), string notes = default(string), string personalTitlePrefix = default(string), int? preScreeningRating = default(int?), bool? referral = default(bool?), string referredBy = default(string), string socialMediaNetworkName = default(string), string socialMediaUserName = default(string), string snapshotIdentifier = default(string))
        {
            EdFi.Roster.Sdk.Client.RequestOptions localVarRequestOptions = new EdFi.Roster.Sdk.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = EdFi.Roster.Sdk.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = EdFi.Roster.Sdk.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (offset != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "offset", offset));
            }
            if (limit != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "limit", limit));
            }
            if (minChangeVersion != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "minChangeVersion", minChangeVersion));
            }
            if (maxChangeVersion != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "maxChangeVersion", maxChangeVersion));
            }
            if (totalCount != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "totalCount", totalCount));
            }
            if (recruitmentEventAttendeeIdentifier != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "recruitmentEventAttendeeIdentifier", recruitmentEventAttendeeIdentifier));
            }
            if (educationOrganizationId != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "educationOrganizationId", educationOrganizationId));
            }
            if (eventDate != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "eventDate", eventDate));
            }
            if (eventTitle != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "eventTitle", eventTitle));
            }
            if (genderDescriptor != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "genderDescriptor", genderDescriptor));
            }
            if (recruitmentEventAttendeeTypeDescriptor != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "recruitmentEventAttendeeTypeDescriptor", recruitmentEventAttendeeTypeDescriptor));
            }
            if (sexDescriptor != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "sexDescriptor", sexDescriptor));
            }
            if (applied != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "applied", applied));
            }
            if (electronicMailAddress != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "electronicMailAddress", electronicMailAddress));
            }
            if (firstName != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "firstName", firstName));
            }
            if (generationCodeSuffix != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "generationCodeSuffix", generationCodeSuffix));
            }
            if (hispanicLatinoEthnicity != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "hispanicLatinoEthnicity", hispanicLatinoEthnicity));
            }
            if (id != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "id", id));
            }
            if (lastSurname != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "lastSurname", lastSurname));
            }
            if (maidenName != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "maidenName", maidenName));
            }
            if (met != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "met", met));
            }
            if (middleName != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "middleName", middleName));
            }
            if (notes != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "notes", notes));
            }
            if (personalTitlePrefix != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "personalTitlePrefix", personalTitlePrefix));
            }
            if (preScreeningRating != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "preScreeningRating", preScreeningRating));
            }
            if (referral != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "referral", referral));
            }
            if (referredBy != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "referredBy", referredBy));
            }
            if (socialMediaNetworkName != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "socialMediaNetworkName", socialMediaNetworkName));
            }
            if (socialMediaUserName != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "socialMediaUserName", socialMediaUserName));
            }
            if (snapshotIdentifier != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Snapshot-Identifier", EdFi.Roster.Sdk.Client.ClientUtils.ParameterToString(snapshotIdentifier)); // header parameter
            }

            // authentication (oauth2_client_credentials) required
            // oauth required
            if (!String.IsNullOrEmpty(this.Configuration.AccessToken))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<List<TpdmRecruitmentEventAttendance>>("/tpdm/recruitmentEventAttendances", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetRecruitmentEventAttendances", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// Retrieves specific resources using the resource&#39;s property values (using the \&quot;Get\&quot; pattern). This GET operation provides access to resources using the \&quot;Get\&quot; search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).
        /// </summary>
        /// <exception cref="EdFi.Roster.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="offset">Indicates how many items should be skipped before returning results. (optional, default to 0)</param>
        /// <param name="limit">Indicates the maximum number of items that should be returned in the results. (optional, default to 25)</param>
        /// <param name="minChangeVersion">Used in synchronization to set sequence minimum ChangeVersion (optional)</param>
        /// <param name="maxChangeVersion">Used in synchronization to set sequence maximum ChangeVersion (optional)</param>
        /// <param name="totalCount">Indicates if the total number of items available should be returned in the &#39;Total-Count&#39; header of the response.  If set to false, &#39;Total-Count&#39; header will not be provided. (optional, default to false)</param>
        /// <param name="recruitmentEventAttendeeIdentifier">The identifier for the attendee to a recuitment event. (optional)</param>
        /// <param name="educationOrganizationId">The identifier assigned to an education organization. (optional)</param>
        /// <param name="eventDate">The date of the event. (optional)</param>
        /// <param name="eventTitle">The title of the event. (optional)</param>
        /// <param name="genderDescriptor">The gender with which a person associates. (optional)</param>
        /// <param name="recruitmentEventAttendeeTypeDescriptor">Reflects the type of prospect, such as EPP Applicant, Hire, or Mentor Teacher. (optional)</param>
        /// <param name="sexDescriptor">A person&#39;s gender. (optional)</param>
        /// <param name="applied">Indicator of whether the prospect applied for a position. (optional)</param>
        /// <param name="electronicMailAddress">The numbers, letters, and symbols used to identify an electronic mail (e-mail) user within the network to which the individual or organization belongs. (optional)</param>
        /// <param name="firstName">A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change. (optional)</param>
        /// <param name="generationCodeSuffix">An appendage, if any, used to denote an individual&#39;s generation in his family (e.g., Jr., Sr., III). (optional)</param>
        /// <param name="hispanicLatinoEthnicity">An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race. The term, \&quot;Spanish origin,\&quot; can be used in addition to \&quot;Hispanic or Latino\&quot;. (optional)</param>
        /// <param name="id"> (optional)</param>
        /// <param name="lastSurname">The name borne in common by members of a family. (optional)</param>
        /// <param name="maidenName">The person&#39;s maiden name. (optional)</param>
        /// <param name="met">Indicator whether the person was met by a representative of the education organization. (optional)</param>
        /// <param name="middleName">A secondary name given to an individual at birth, baptism, or during another naming ceremony. (optional)</param>
        /// <param name="notes">Additional notes about the prospect. (optional)</param>
        /// <param name="personalTitlePrefix">A prefix used to denote the title, degree, position, or seniority of the person. (optional)</param>
        /// <param name="preScreeningRating">The rating initially assigned to the prospect prior to an official screening. (optional)</param>
        /// <param name="referral">Indicator of whether the prospect was a referral. (optional)</param>
        /// <param name="referredBy">The person making the referral. (optional)</param>
        /// <param name="socialMediaNetworkName">The social media network name (e.g., LinkedIn, Twitter, etc.) associated with the SocialMediaUserName. (optional)</param>
        /// <param name="socialMediaUserName">The user name of the person on social media. (optional)</param>
        /// <param name="snapshotIdentifier">Indicates the Snapshot-Identifier that should be used. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;TpdmRecruitmentEventAttendance&gt;</returns>
        public async System.Threading.Tasks.Task<List<TpdmRecruitmentEventAttendance>> GetRecruitmentEventAttendancesAsync(int? offset = default(int?), int? limit = default(int?), int? minChangeVersion = default(int?), int? maxChangeVersion = default(int?), bool? totalCount = default(bool?), string recruitmentEventAttendeeIdentifier = default(string), int? educationOrganizationId = default(int?), DateTime? eventDate = default(DateTime?), string eventTitle = default(string), string genderDescriptor = default(string), string recruitmentEventAttendeeTypeDescriptor = default(string), string sexDescriptor = default(string), bool? applied = default(bool?), string electronicMailAddress = default(string), string firstName = default(string), string generationCodeSuffix = default(string), bool? hispanicLatinoEthnicity = default(bool?), string id = default(string), string lastSurname = default(string), string maidenName = default(string), bool? met = default(bool?), string middleName = default(string), string notes = default(string), string personalTitlePrefix = default(string), int? preScreeningRating = default(int?), bool? referral = default(bool?), string referredBy = default(string), string socialMediaNetworkName = default(string), string socialMediaUserName = default(string), string snapshotIdentifier = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            EdFi.Roster.Sdk.Client.ApiResponse<List<TpdmRecruitmentEventAttendance>> localVarResponse = await GetRecruitmentEventAttendancesWithHttpInfoAsync(offset, limit, minChangeVersion, maxChangeVersion, totalCount, recruitmentEventAttendeeIdentifier, educationOrganizationId, eventDate, eventTitle, genderDescriptor, recruitmentEventAttendeeTypeDescriptor, sexDescriptor, applied, electronicMailAddress, firstName, generationCodeSuffix, hispanicLatinoEthnicity, id, lastSurname, maidenName, met, middleName, notes, personalTitlePrefix, preScreeningRating, referral, referredBy, socialMediaNetworkName, socialMediaUserName, snapshotIdentifier, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Retrieves specific resources using the resource&#39;s property values (using the \&quot;Get\&quot; pattern). This GET operation provides access to resources using the \&quot;Get\&quot; search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).
        /// </summary>
        /// <exception cref="EdFi.Roster.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="offset">Indicates how many items should be skipped before returning results. (optional, default to 0)</param>
        /// <param name="limit">Indicates the maximum number of items that should be returned in the results. (optional, default to 25)</param>
        /// <param name="minChangeVersion">Used in synchronization to set sequence minimum ChangeVersion (optional)</param>
        /// <param name="maxChangeVersion">Used in synchronization to set sequence maximum ChangeVersion (optional)</param>
        /// <param name="totalCount">Indicates if the total number of items available should be returned in the &#39;Total-Count&#39; header of the response.  If set to false, &#39;Total-Count&#39; header will not be provided. (optional, default to false)</param>
        /// <param name="recruitmentEventAttendeeIdentifier">The identifier for the attendee to a recuitment event. (optional)</param>
        /// <param name="educationOrganizationId">The identifier assigned to an education organization. (optional)</param>
        /// <param name="eventDate">The date of the event. (optional)</param>
        /// <param name="eventTitle">The title of the event. (optional)</param>
        /// <param name="genderDescriptor">The gender with which a person associates. (optional)</param>
        /// <param name="recruitmentEventAttendeeTypeDescriptor">Reflects the type of prospect, such as EPP Applicant, Hire, or Mentor Teacher. (optional)</param>
        /// <param name="sexDescriptor">A person&#39;s gender. (optional)</param>
        /// <param name="applied">Indicator of whether the prospect applied for a position. (optional)</param>
        /// <param name="electronicMailAddress">The numbers, letters, and symbols used to identify an electronic mail (e-mail) user within the network to which the individual or organization belongs. (optional)</param>
        /// <param name="firstName">A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change. (optional)</param>
        /// <param name="generationCodeSuffix">An appendage, if any, used to denote an individual&#39;s generation in his family (e.g., Jr., Sr., III). (optional)</param>
        /// <param name="hispanicLatinoEthnicity">An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race. The term, \&quot;Spanish origin,\&quot; can be used in addition to \&quot;Hispanic or Latino\&quot;. (optional)</param>
        /// <param name="id"> (optional)</param>
        /// <param name="lastSurname">The name borne in common by members of a family. (optional)</param>
        /// <param name="maidenName">The person&#39;s maiden name. (optional)</param>
        /// <param name="met">Indicator whether the person was met by a representative of the education organization. (optional)</param>
        /// <param name="middleName">A secondary name given to an individual at birth, baptism, or during another naming ceremony. (optional)</param>
        /// <param name="notes">Additional notes about the prospect. (optional)</param>
        /// <param name="personalTitlePrefix">A prefix used to denote the title, degree, position, or seniority of the person. (optional)</param>
        /// <param name="preScreeningRating">The rating initially assigned to the prospect prior to an official screening. (optional)</param>
        /// <param name="referral">Indicator of whether the prospect was a referral. (optional)</param>
        /// <param name="referredBy">The person making the referral. (optional)</param>
        /// <param name="socialMediaNetworkName">The social media network name (e.g., LinkedIn, Twitter, etc.) associated with the SocialMediaUserName. (optional)</param>
        /// <param name="socialMediaUserName">The user name of the person on social media. (optional)</param>
        /// <param name="snapshotIdentifier">Indicates the Snapshot-Identifier that should be used. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;TpdmRecruitmentEventAttendance&gt;)</returns>
        public async System.Threading.Tasks.Task<EdFi.Roster.Sdk.Client.ApiResponse<List<TpdmRecruitmentEventAttendance>>> GetRecruitmentEventAttendancesWithHttpInfoAsync(int? offset = default(int?), int? limit = default(int?), int? minChangeVersion = default(int?), int? maxChangeVersion = default(int?), bool? totalCount = default(bool?), string recruitmentEventAttendeeIdentifier = default(string), int? educationOrganizationId = default(int?), DateTime? eventDate = default(DateTime?), string eventTitle = default(string), string genderDescriptor = default(string), string recruitmentEventAttendeeTypeDescriptor = default(string), string sexDescriptor = default(string), bool? applied = default(bool?), string electronicMailAddress = default(string), string firstName = default(string), string generationCodeSuffix = default(string), bool? hispanicLatinoEthnicity = default(bool?), string id = default(string), string lastSurname = default(string), string maidenName = default(string), bool? met = default(bool?), string middleName = default(string), string notes = default(string), string personalTitlePrefix = default(string), int? preScreeningRating = default(int?), bool? referral = default(bool?), string referredBy = default(string), string socialMediaNetworkName = default(string), string socialMediaUserName = default(string), string snapshotIdentifier = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            EdFi.Roster.Sdk.Client.RequestOptions localVarRequestOptions = new EdFi.Roster.Sdk.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };


            var localVarContentType = EdFi.Roster.Sdk.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = EdFi.Roster.Sdk.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (offset != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "offset", offset));
            }
            if (limit != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "limit", limit));
            }
            if (minChangeVersion != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "minChangeVersion", minChangeVersion));
            }
            if (maxChangeVersion != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "maxChangeVersion", maxChangeVersion));
            }
            if (totalCount != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "totalCount", totalCount));
            }
            if (recruitmentEventAttendeeIdentifier != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "recruitmentEventAttendeeIdentifier", recruitmentEventAttendeeIdentifier));
            }
            if (educationOrganizationId != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "educationOrganizationId", educationOrganizationId));
            }
            if (eventDate != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "eventDate", eventDate));
            }
            if (eventTitle != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "eventTitle", eventTitle));
            }
            if (genderDescriptor != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "genderDescriptor", genderDescriptor));
            }
            if (recruitmentEventAttendeeTypeDescriptor != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "recruitmentEventAttendeeTypeDescriptor", recruitmentEventAttendeeTypeDescriptor));
            }
            if (sexDescriptor != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "sexDescriptor", sexDescriptor));
            }
            if (applied != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "applied", applied));
            }
            if (electronicMailAddress != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "electronicMailAddress", electronicMailAddress));
            }
            if (firstName != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "firstName", firstName));
            }
            if (generationCodeSuffix != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "generationCodeSuffix", generationCodeSuffix));
            }
            if (hispanicLatinoEthnicity != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "hispanicLatinoEthnicity", hispanicLatinoEthnicity));
            }
            if (id != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "id", id));
            }
            if (lastSurname != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "lastSurname", lastSurname));
            }
            if (maidenName != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "maidenName", maidenName));
            }
            if (met != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "met", met));
            }
            if (middleName != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "middleName", middleName));
            }
            if (notes != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "notes", notes));
            }
            if (personalTitlePrefix != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "personalTitlePrefix", personalTitlePrefix));
            }
            if (preScreeningRating != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "preScreeningRating", preScreeningRating));
            }
            if (referral != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "referral", referral));
            }
            if (referredBy != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "referredBy", referredBy));
            }
            if (socialMediaNetworkName != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "socialMediaNetworkName", socialMediaNetworkName));
            }
            if (socialMediaUserName != null)
            {
                localVarRequestOptions.QueryParameters.Add(EdFi.Roster.Sdk.Client.ClientUtils.ParameterToMultiMap("", "socialMediaUserName", socialMediaUserName));
            }
            if (snapshotIdentifier != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Snapshot-Identifier", EdFi.Roster.Sdk.Client.ClientUtils.ParameterToString(snapshotIdentifier)); // header parameter
            }

            // authentication (oauth2_client_credentials) required
            // oauth required
            if (!String.IsNullOrEmpty(this.Configuration.AccessToken))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<List<TpdmRecruitmentEventAttendance>>("/tpdm/recruitmentEventAttendances", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetRecruitmentEventAttendances", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// Retrieves a specific resource using the resource&#39;s identifier (using the \&quot;Get By Id\&quot; pattern). This GET operation retrieves a resource by the specified resource identifier.
        /// </summary>
        /// <exception cref="EdFi.Roster.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A resource identifier that uniquely identifies the resource.</param>
        /// <param name="ifNoneMatch">The previously returned ETag header value, used here to prevent the unnecessary data transfer of an unchanged resource. (optional)</param>
        /// <param name="snapshotIdentifier">Indicates the Snapshot-Identifier that should be used. (optional)</param>
        /// <returns>TpdmRecruitmentEventAttendance</returns>
        public TpdmRecruitmentEventAttendance GetRecruitmentEventAttendancesById(string id, string ifNoneMatch = default(string), string snapshotIdentifier = default(string))
        {
            EdFi.Roster.Sdk.Client.ApiResponse<TpdmRecruitmentEventAttendance> localVarResponse = GetRecruitmentEventAttendancesByIdWithHttpInfo(id, ifNoneMatch, snapshotIdentifier);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Retrieves a specific resource using the resource&#39;s identifier (using the \&quot;Get By Id\&quot; pattern). This GET operation retrieves a resource by the specified resource identifier.
        /// </summary>
        /// <exception cref="EdFi.Roster.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A resource identifier that uniquely identifies the resource.</param>
        /// <param name="ifNoneMatch">The previously returned ETag header value, used here to prevent the unnecessary data transfer of an unchanged resource. (optional)</param>
        /// <param name="snapshotIdentifier">Indicates the Snapshot-Identifier that should be used. (optional)</param>
        /// <returns>ApiResponse of TpdmRecruitmentEventAttendance</returns>
        public EdFi.Roster.Sdk.Client.ApiResponse<TpdmRecruitmentEventAttendance> GetRecruitmentEventAttendancesByIdWithHttpInfo(string id, string ifNoneMatch = default(string), string snapshotIdentifier = default(string))
        {
            // verify the required parameter 'id' is set
            if (id == null)
                throw new EdFi.Roster.Sdk.Client.ApiException(400, "Missing required parameter 'id' when calling RecruitmentEventAttendancesApi->GetRecruitmentEventAttendancesById");

            EdFi.Roster.Sdk.Client.RequestOptions localVarRequestOptions = new EdFi.Roster.Sdk.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = EdFi.Roster.Sdk.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = EdFi.Roster.Sdk.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("id", EdFi.Roster.Sdk.Client.ClientUtils.ParameterToString(id)); // path parameter
            if (ifNoneMatch != null)
            {
                localVarRequestOptions.HeaderParameters.Add("If-None-Match", EdFi.Roster.Sdk.Client.ClientUtils.ParameterToString(ifNoneMatch)); // header parameter
            }
            if (snapshotIdentifier != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Snapshot-Identifier", EdFi.Roster.Sdk.Client.ClientUtils.ParameterToString(snapshotIdentifier)); // header parameter
            }

            // authentication (oauth2_client_credentials) required
            // oauth required
            if (!String.IsNullOrEmpty(this.Configuration.AccessToken))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<TpdmRecruitmentEventAttendance>("/tpdm/recruitmentEventAttendances/{id}", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetRecruitmentEventAttendancesById", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// Retrieves a specific resource using the resource&#39;s identifier (using the \&quot;Get By Id\&quot; pattern). This GET operation retrieves a resource by the specified resource identifier.
        /// </summary>
        /// <exception cref="EdFi.Roster.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A resource identifier that uniquely identifies the resource.</param>
        /// <param name="ifNoneMatch">The previously returned ETag header value, used here to prevent the unnecessary data transfer of an unchanged resource. (optional)</param>
        /// <param name="snapshotIdentifier">Indicates the Snapshot-Identifier that should be used. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of TpdmRecruitmentEventAttendance</returns>
        public async System.Threading.Tasks.Task<TpdmRecruitmentEventAttendance> GetRecruitmentEventAttendancesByIdAsync(string id, string ifNoneMatch = default(string), string snapshotIdentifier = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            EdFi.Roster.Sdk.Client.ApiResponse<TpdmRecruitmentEventAttendance> localVarResponse = await GetRecruitmentEventAttendancesByIdWithHttpInfoAsync(id, ifNoneMatch, snapshotIdentifier, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Retrieves a specific resource using the resource&#39;s identifier (using the \&quot;Get By Id\&quot; pattern). This GET operation retrieves a resource by the specified resource identifier.
        /// </summary>
        /// <exception cref="EdFi.Roster.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A resource identifier that uniquely identifies the resource.</param>
        /// <param name="ifNoneMatch">The previously returned ETag header value, used here to prevent the unnecessary data transfer of an unchanged resource. (optional)</param>
        /// <param name="snapshotIdentifier">Indicates the Snapshot-Identifier that should be used. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (TpdmRecruitmentEventAttendance)</returns>
        public async System.Threading.Tasks.Task<EdFi.Roster.Sdk.Client.ApiResponse<TpdmRecruitmentEventAttendance>> GetRecruitmentEventAttendancesByIdWithHttpInfoAsync(string id, string ifNoneMatch = default(string), string snapshotIdentifier = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'id' is set
            if (id == null)
                throw new EdFi.Roster.Sdk.Client.ApiException(400, "Missing required parameter 'id' when calling RecruitmentEventAttendancesApi->GetRecruitmentEventAttendancesById");


            EdFi.Roster.Sdk.Client.RequestOptions localVarRequestOptions = new EdFi.Roster.Sdk.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };


            var localVarContentType = EdFi.Roster.Sdk.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = EdFi.Roster.Sdk.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("id", EdFi.Roster.Sdk.Client.ClientUtils.ParameterToString(id)); // path parameter
            if (ifNoneMatch != null)
            {
                localVarRequestOptions.HeaderParameters.Add("If-None-Match", EdFi.Roster.Sdk.Client.ClientUtils.ParameterToString(ifNoneMatch)); // header parameter
            }
            if (snapshotIdentifier != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Snapshot-Identifier", EdFi.Roster.Sdk.Client.ClientUtils.ParameterToString(snapshotIdentifier)); // header parameter
            }

            // authentication (oauth2_client_credentials) required
            // oauth required
            if (!String.IsNullOrEmpty(this.Configuration.AccessToken))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<TpdmRecruitmentEventAttendance>("/tpdm/recruitmentEventAttendances/{id}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetRecruitmentEventAttendancesById", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// Creates or updates resources based on the natural key values of the supplied resource. The POST operation can be used to create or update resources. In database terms, this is often referred to as an \&quot;upsert\&quot; operation (insert + update). Clients should NOT include the resource \&quot;id\&quot; in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.
        /// </summary>
        /// <exception cref="EdFi.Roster.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="recruitmentEventAttendance">The JSON representation of the \&quot;recruitmentEventAttendance\&quot; resource to be created or updated.</param>
        /// <returns></returns>
        public void PostRecruitmentEventAttendance(TpdmRecruitmentEventAttendance recruitmentEventAttendance)
        {
            PostRecruitmentEventAttendanceWithHttpInfo(recruitmentEventAttendance);
        }

        /// <summary>
        /// Creates or updates resources based on the natural key values of the supplied resource. The POST operation can be used to create or update resources. In database terms, this is often referred to as an \&quot;upsert\&quot; operation (insert + update). Clients should NOT include the resource \&quot;id\&quot; in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.
        /// </summary>
        /// <exception cref="EdFi.Roster.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="recruitmentEventAttendance">The JSON representation of the \&quot;recruitmentEventAttendance\&quot; resource to be created or updated.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public EdFi.Roster.Sdk.Client.ApiResponse<Object> PostRecruitmentEventAttendanceWithHttpInfo(TpdmRecruitmentEventAttendance recruitmentEventAttendance)
        {
            // verify the required parameter 'recruitmentEventAttendance' is set
            if (recruitmentEventAttendance == null)
                throw new EdFi.Roster.Sdk.Client.ApiException(400, "Missing required parameter 'recruitmentEventAttendance' when calling RecruitmentEventAttendancesApi->PostRecruitmentEventAttendance");

            EdFi.Roster.Sdk.Client.RequestOptions localVarRequestOptions = new EdFi.Roster.Sdk.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
            };

            var localVarContentType = EdFi.Roster.Sdk.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = EdFi.Roster.Sdk.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = recruitmentEventAttendance;

            // authentication (oauth2_client_credentials) required
            // oauth required
            if (!String.IsNullOrEmpty(this.Configuration.AccessToken))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<Object>("/tpdm/recruitmentEventAttendances", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PostRecruitmentEventAttendance", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// Creates or updates resources based on the natural key values of the supplied resource. The POST operation can be used to create or update resources. In database terms, this is often referred to as an \&quot;upsert\&quot; operation (insert + update). Clients should NOT include the resource \&quot;id\&quot; in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.
        /// </summary>
        /// <exception cref="EdFi.Roster.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="recruitmentEventAttendance">The JSON representation of the \&quot;recruitmentEventAttendance\&quot; resource to be created or updated.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task PostRecruitmentEventAttendanceAsync(TpdmRecruitmentEventAttendance recruitmentEventAttendance, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            await PostRecruitmentEventAttendanceWithHttpInfoAsync(recruitmentEventAttendance, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Creates or updates resources based on the natural key values of the supplied resource. The POST operation can be used to create or update resources. In database terms, this is often referred to as an \&quot;upsert\&quot; operation (insert + update). Clients should NOT include the resource \&quot;id\&quot; in the JSON body because it will result in an error. The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately. It is recommended to use POST for both create and update except while updating natural key of a resource in which case PUT operation must be used.
        /// </summary>
        /// <exception cref="EdFi.Roster.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="recruitmentEventAttendance">The JSON representation of the \&quot;recruitmentEventAttendance\&quot; resource to be created or updated.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<EdFi.Roster.Sdk.Client.ApiResponse<Object>> PostRecruitmentEventAttendanceWithHttpInfoAsync(TpdmRecruitmentEventAttendance recruitmentEventAttendance, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'recruitmentEventAttendance' is set
            if (recruitmentEventAttendance == null)
                throw new EdFi.Roster.Sdk.Client.ApiException(400, "Missing required parameter 'recruitmentEventAttendance' when calling RecruitmentEventAttendancesApi->PostRecruitmentEventAttendance");


            EdFi.Roster.Sdk.Client.RequestOptions localVarRequestOptions = new EdFi.Roster.Sdk.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
            };


            var localVarContentType = EdFi.Roster.Sdk.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = EdFi.Roster.Sdk.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = recruitmentEventAttendance;

            // authentication (oauth2_client_credentials) required
            // oauth required
            if (!String.IsNullOrEmpty(this.Configuration.AccessToken))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Object>("/tpdm/recruitmentEventAttendances", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PostRecruitmentEventAttendance", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// Updates a resource based on the resource identifier. The PUT operation is used to update a resource by identifier. If the resource identifier (\&quot;id\&quot;) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation and will not be modified in the database, and so recommendation is to use POST as that supports upsert behavior.
        /// </summary>
        /// <exception cref="EdFi.Roster.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A resource identifier that uniquely identifies the resource.</param>
        /// <param name="recruitmentEventAttendance">The JSON representation of the \&quot;recruitmentEventAttendance\&quot; resource to be created or updated.</param>
        /// <param name="ifMatch">The ETag header value used to prevent the PUT from updating a resource modified by another consumer. (optional)</param>
        /// <returns></returns>
        public void PutRecruitmentEventAttendance(string id, TpdmRecruitmentEventAttendance recruitmentEventAttendance, string ifMatch = default(string))
        {
            PutRecruitmentEventAttendanceWithHttpInfo(id, recruitmentEventAttendance, ifMatch);
        }

        /// <summary>
        /// Updates a resource based on the resource identifier. The PUT operation is used to update a resource by identifier. If the resource identifier (\&quot;id\&quot;) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation and will not be modified in the database, and so recommendation is to use POST as that supports upsert behavior.
        /// </summary>
        /// <exception cref="EdFi.Roster.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A resource identifier that uniquely identifies the resource.</param>
        /// <param name="recruitmentEventAttendance">The JSON representation of the \&quot;recruitmentEventAttendance\&quot; resource to be created or updated.</param>
        /// <param name="ifMatch">The ETag header value used to prevent the PUT from updating a resource modified by another consumer. (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public EdFi.Roster.Sdk.Client.ApiResponse<Object> PutRecruitmentEventAttendanceWithHttpInfo(string id, TpdmRecruitmentEventAttendance recruitmentEventAttendance, string ifMatch = default(string))
        {
            // verify the required parameter 'id' is set
            if (id == null)
                throw new EdFi.Roster.Sdk.Client.ApiException(400, "Missing required parameter 'id' when calling RecruitmentEventAttendancesApi->PutRecruitmentEventAttendance");

            // verify the required parameter 'recruitmentEventAttendance' is set
            if (recruitmentEventAttendance == null)
                throw new EdFi.Roster.Sdk.Client.ApiException(400, "Missing required parameter 'recruitmentEventAttendance' when calling RecruitmentEventAttendancesApi->PutRecruitmentEventAttendance");

            EdFi.Roster.Sdk.Client.RequestOptions localVarRequestOptions = new EdFi.Roster.Sdk.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
            };

            var localVarContentType = EdFi.Roster.Sdk.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = EdFi.Roster.Sdk.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("id", EdFi.Roster.Sdk.Client.ClientUtils.ParameterToString(id)); // path parameter
            if (ifMatch != null)
            {
                localVarRequestOptions.HeaderParameters.Add("If-Match", EdFi.Roster.Sdk.Client.ClientUtils.ParameterToString(ifMatch)); // header parameter
            }
            localVarRequestOptions.Data = recruitmentEventAttendance;

            // authentication (oauth2_client_credentials) required
            // oauth required
            if (!String.IsNullOrEmpty(this.Configuration.AccessToken))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = this.Client.Put<Object>("/tpdm/recruitmentEventAttendances/{id}", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PutRecruitmentEventAttendance", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// Updates a resource based on the resource identifier. The PUT operation is used to update a resource by identifier. If the resource identifier (\&quot;id\&quot;) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation and will not be modified in the database, and so recommendation is to use POST as that supports upsert behavior.
        /// </summary>
        /// <exception cref="EdFi.Roster.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A resource identifier that uniquely identifies the resource.</param>
        /// <param name="recruitmentEventAttendance">The JSON representation of the \&quot;recruitmentEventAttendance\&quot; resource to be created or updated.</param>
        /// <param name="ifMatch">The ETag header value used to prevent the PUT from updating a resource modified by another consumer. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task PutRecruitmentEventAttendanceAsync(string id, TpdmRecruitmentEventAttendance recruitmentEventAttendance, string ifMatch = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            await PutRecruitmentEventAttendanceWithHttpInfoAsync(id, recruitmentEventAttendance, ifMatch, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Updates a resource based on the resource identifier. The PUT operation is used to update a resource by identifier. If the resource identifier (\&quot;id\&quot;) is provided in the JSON body, it will be ignored. Additionally, this API resource is not configured for cascading natural key updates. Natural key values for this resource cannot be changed using PUT operation and will not be modified in the database, and so recommendation is to use POST as that supports upsert behavior.
        /// </summary>
        /// <exception cref="EdFi.Roster.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">A resource identifier that uniquely identifies the resource.</param>
        /// <param name="recruitmentEventAttendance">The JSON representation of the \&quot;recruitmentEventAttendance\&quot; resource to be created or updated.</param>
        /// <param name="ifMatch">The ETag header value used to prevent the PUT from updating a resource modified by another consumer. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<EdFi.Roster.Sdk.Client.ApiResponse<Object>> PutRecruitmentEventAttendanceWithHttpInfoAsync(string id, TpdmRecruitmentEventAttendance recruitmentEventAttendance, string ifMatch = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'id' is set
            if (id == null)
                throw new EdFi.Roster.Sdk.Client.ApiException(400, "Missing required parameter 'id' when calling RecruitmentEventAttendancesApi->PutRecruitmentEventAttendance");

            // verify the required parameter 'recruitmentEventAttendance' is set
            if (recruitmentEventAttendance == null)
                throw new EdFi.Roster.Sdk.Client.ApiException(400, "Missing required parameter 'recruitmentEventAttendance' when calling RecruitmentEventAttendancesApi->PutRecruitmentEventAttendance");


            EdFi.Roster.Sdk.Client.RequestOptions localVarRequestOptions = new EdFi.Roster.Sdk.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
            };


            var localVarContentType = EdFi.Roster.Sdk.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = EdFi.Roster.Sdk.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("id", EdFi.Roster.Sdk.Client.ClientUtils.ParameterToString(id)); // path parameter
            if (ifMatch != null)
            {
                localVarRequestOptions.HeaderParameters.Add("If-Match", EdFi.Roster.Sdk.Client.ClientUtils.ParameterToString(ifMatch)); // header parameter
            }
            localVarRequestOptions.Data = recruitmentEventAttendance;

            // authentication (oauth2_client_credentials) required
            // oauth required
            if (!String.IsNullOrEmpty(this.Configuration.AccessToken))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PutAsync<Object>("/tpdm/recruitmentEventAttendances/{id}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PutRecruitmentEventAttendance", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

    }
}
